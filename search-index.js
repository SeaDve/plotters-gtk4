var searchIndex = JSON.parse('{\
"plotters_gtk4":{"doc":"Plotters GTK4","t":"DDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Paintable","PaintableBackend","SnapshotBackend","add_weak_ref_notify","add_weak_ref_notify_local","bind_property","block_signal","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","class","class_of","clear","clone","clone_into","cmp","connect","connect_closure","connect_closure_id","connect_id","connect_local","connect_local_id","connect_notify","connect_notify_local","connect_notify_unsafe","connect_unsafe","connect_unsafe_id","data","disconnect","downgrade","draw_circle","draw_circle","draw_line","draw_line","draw_path","draw_path","draw_pixel","draw_pixel","draw_rect","draw_rect","draw_text","draw_text","drop","emit","emit_by_name","emit_by_name_with_details","emit_by_name_with_details_and_values","emit_by_name_with_values","emit_with_details","emit_with_details_and_values","emit_with_values","ensure_prepared","ensure_prepared","ensure_type","eq","equivalent","estimate_text_size","estimate_text_size","fill_polygon","fill_polygon","find_property","fmt","fmt","fmt","freeze_notify","from","from","from","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_container_num_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_full_num_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","from_glib_none_num_as_vec","get","get_size","get_size","has_property","hash","height","imp","interface","into","into","into","into_closure_return_value","is","list_properties","new","new","new","notify","notify_by_pspec","object_class","param_spec_builder","parent_class_init","parent_instance_init","partial_cmp","present","present","property","property_type","property_value","qdata","ref_count","run_dispose","set_data","set_properties","set_properties_from_value","set_property","set_property_from_value","set_qdata","size","static_type","steal_data","steal_qdata","stop_signal_emission","stop_signal_emission_by_name","to_owned","try_from","try_from","try_from","try_from_closure_return_value","try_into","try_into","try_into","type_","type_id","type_id","type_id","unblock_signal","watch_closure","width"],"q":[[0,"plotters_gtk4"]],"d":["A paintable to draw on in <code>PaintableBackend</code>.","Backend that draws to an object that implements …","Backend that draws to a <code>gtk::Snapshot</code>.","","","","","","","","","","","","","Clears the contents of the paintable.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the height of the paintable.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Creates a new paintable with the given width and height.","Creates a new drawing backend backed with an object that …","Creates a new drawing backend backed with <code>gtk::Snapshot</code> …","","","","","","","","","","","","","","","","","","","","","","Returns the width and height of the paintable.","","","","","","","","","","","","","","","","","","","","Returns the width of the paintable."],"i":[0,0,0,11,11,11,11,11,21,27,11,21,27,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,21,27,21,27,21,27,21,27,21,27,21,27,21,11,11,11,11,11,11,11,11,21,27,11,11,11,21,27,21,27,11,11,21,27,11,11,21,27,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,21,27,11,11,11,11,11,11,21,27,11,11,11,11,21,27,11,11,11,11,11,11,11,21,27,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,21,27,11,11,21,27,11,11,21,27,11,11,11],"f":[0,0,0,[[[0,[1,2]]],3],[1,3],[[4,5,4],6],[7],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[9,[8]]]],[[],[[10,[[9,[8]]]]]],[11],[11,11],[[]],[[11,11],12],[[4,13,[0,[14,2,15]]],7],[[4,13,16],7],[[17,[10,[18]],13,16],7],[[17,[10,[18]],13,[0,[14,2,15]]],7],[[4,13,14],7],[[17,[10,[18]],13,14],7],[[[10,[4]],[0,[14,2,15]]],7],[[[10,[4]],14],7],[[[10,[4]],14],7],[[4,13,14],7],[[17,[10,[18]],13,14],7],[4,[[10,[19]]]],[7],[[],20],[[21,22,23,24,13],[[26,[25]]]],[[27,22,23,24,13],[[26,[25]]]],[[21,22,22,24],[[26,[25]]]],[[27,22,22,24],[[26,[25]]]],[[21,28,24],[[26,[25]]]],[[27,28,24],[[26,[25]]]],[[21,22,29],[[26,[25]]]],[[27,22,29],[[26,[25]]]],[[21,22,22,24,13],[[26,[25]]]],[[27,22,22,24,13],[[26,[25]]]],[[21,4,30,22],[[26,[25]]]],[[27,4,30,22],[[26,[25]]]],[21],[[17,[32,[31]]],33],[[4,[32,[31]]],33],[[4,18,[32,[31]]],33],[[4,18,[32,[34]]],[[10,[34]]]],[[4,[32,[34]]],[[10,[34]]]],[[17,18,[32,[31]]],33],[[17,18,[32,[34]]],[[10,[34]]]],[[17,[32,[34]]],[[10,[34]]]],[21,[[26,[25]]]],[27,[[26,[25]]]],[[]],[[11,5],13],[[],13],[[21,4,30],[[26,[25]]]],[[27,4,30],[[26,[25]]]],[[21,28,24],[[26,[25]]]],[[27,28,24],[[26,[25]]]],[4,[[10,[35]]]],[[11,36],37],[[21,36],37],[[27,36],37],[[],38],[[]],[[]],[[]],[39,[[41,[40]]]],[39,[[41,[40]]]],[42,[[41,[40]]]],[42,[[41,[40]]]],[43,[[41,[40]]]],[43,[[41,[40]]]],[[39,44],[[41,[40]]]],[[42,44],[[41,[40]]]],[[39,44],[[41,[40]]]],[[43,44],[[41,[40]]]],[[42,44],[[41,[40]]]],[[43,44],[[41,[40]]]],[42,[[41,[40]]]],[39,[[41,[40]]]],[42,[[41,[40]]]],[43,[[41,[40]]]],[39,[[41,[40]]]],[43,[[41,[40]]]],[[39,44],[[41,[40]]]],[[39,44],[[41,[40]]]],[[42,44],[[41,[40]]]],[[43,44],[[41,[40]]]],[[42,44],[[41,[40]]]],[[43,44],[[41,[40]]]],[42,[[41,[40]]]],[43,[[41,[40]]]],[39,[[41,[40]]]],[42,[[41,[40]]]],[43,[[41,[40]]]],[39,[[41,[40]]]],[[42,44],[[41,[40]]]],[[43,44],[[41,[40]]]],[[39,44],[[41,[40]]]],[[42,44],[[41,[40]]]],[[39,44],[[41,[40]]]],[[43,44],[[41,[40]]]],[14],[21],[27],[[4,[10,[45]]],13],[[11,46]],[11,23],[[]],[[],[[10,[[48,[47]]]]]],[[]],[[]],[[]],[[],[[10,[34]]]],[[],13],[[],[[49,[35]]]],[[],11],[11,21],[50,27],[4],[35],[[],[[9,[51]]]],[[]],[9],[[[53,[52]]]],[[11,5],[[10,[12]]]],[21,[[26,[25]]]],[27,[[26,[25]]]],[4,54],[4,[[10,[45]]]],[4,34],[18,[[10,[19]]]],[[],23],[[]],[4],[32],[32],[[4,[55,[34]]]],[[4,34]],[18],[11],[[],45],[4,10],[18,10],[[17,[10,[18]]]],[4],[[]],[[],26],[[],26],[[],26],[[[10,[34]]],[[26,[56]]]],[[],26],[[],26],[[],26],[[],45],[[],57],[[],57],[[],57],[7],[[[59,[58]]]],[11,23]],"c":[],"p":[[8,"FnOnce"],[8,"Send"],[3,"WeakRefNotify"],[15,"str"],[8,"ObjectType"],[3,"BindingBuilder"],[3,"SignalHandlerId"],[8,"IsClass"],[3,"Class"],[4,"Option"],[3,"Paintable"],[4,"Ordering"],[15,"bool"],[8,"Fn"],[8,"Sync"],[3,"RustClosure"],[3,"SignalId"],[3,"Quark"],[3,"NonNull"],[3,"WeakRef"],[3,"PaintableBackend"],[6,"BackendCoord"],[15,"u32"],[8,"BackendStyle"],[4,"DrawingErrorKind"],[4,"Result"],[3,"SnapshotBackend"],[8,"IntoIterator"],[3,"BackendColor"],[8,"BackendTextStyle"],[8,"ToValue"],[15,"slice"],[8,"TryFromClosureReturnValue"],[3,"Value"],[3,"ParamSpec"],[3,"Formatter"],[6,"Result"],[3,"PropertyNotificationFreezeGuard"],[3,"GPtrArray"],[3,"Global"],[3,"Vec"],[3,"GList"],[3,"GSList"],[15,"usize"],[3,"Type"],[8,"Hasher"],[8,"IsInterface"],[3,"InterfaceRef"],[3,"PtrSlice"],[3,"Snapshot"],[3,"Object"],[8,"ObjectSubclass"],[3,"InitializingObject"],[8,"FromValue"],[8,"Into"],[3,"BoolError"],[3,"TypeId"],[3,"Closure"],[8,"AsRef"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
